library(VIM)
library(GGally)
meteo_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2015.xls.csv")
meteo_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2015.csv")
meteo_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2016.csv")
prod_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2015.csv")
prod_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2016.csv")
meteo_2015_2016 <- bind_rows(meteo_2015, meteo_2016)
prod_2015_2016 <- bind_rows(prod_2015, prod_2016)
# Borramos los archivos originales
rm(meteo_2015)
rm(meteo_2016)
rm(prod_2015)
rm(prod_2016)
summary(prod_2015_2016)
glimpse(prod_2015_2016)
summary(meteo_2015_2016)
meteo_2015_2016_final <- meteo_2015_2016 %>%
select(Datetime,
'Ambient Temperature [ºC]',
'Diffuse Radiation [W/m2]',
'Ultraviolet [W/m2]',
'Global Radiation [W/m2]')
tabla_final <- meteo_2015_2016_final %>%
left_join(prod_2015_2016_final, by = Datetime)
prod_2015_2016_final <- prod_2015_2016 %>%
select(Datetime,
'A_Optimal - Power DC [W]',
'B_Optimal - Power DC [W]')
tabla_final <- meteo_2015_2016_final %>%
left_join(prod_2015_2016_final, by = Datetime)
tabla_final <- meteo_2015_2016_final %>%
left_join(prod_2015_2016_final, by = 'Datetime')
summary(tabla_final)
summary(tabla_final$`Ambient Temperature [ºC]`)
hist(tabla_final$`Ambient Temperature [ºC]`)
tabla_final <- tabla_final %>%
filter(`Ambient Temperature [ºC]` > -100)
summary(tabla_final)
test_meteo_2017 <- read_csv("./data/hackathon_data/test-sunlab-meteo-2017.csv")
test_meteo_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-meteo-2017.csv")
test_prod_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-pv-2017.csv")
tabla_final_test <- test_meteo_2017 %>%
left_join(test_prod_2017, by = "Datetime") %>%
select(`A_Optimal - Power DC [W]`,
`Global Radiation [W/m2]`,
`Ultraviolet [W/m2]`)
write_csv(tabla_final_test, "test_meteo_prod_2017.csv")
library(tidyverse)
library(readxl)
library(VIM)
library(GGally)
meteo_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2015.csv")
meteo_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2016.csv")
prod_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2015.csv")
prod_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2016.csv")
meteo_2015_2016 <- bind_rows(meteo_2015, meteo_2016)
prod_2015_2016 <- bind_rows(prod_2015, prod_2016)
# Borramos los archivos originales
rm(meteo_2015)
rm(meteo_2016)
rm(prod_2015)
rm(prod_2016)
summary(prod_2015_2016)
glimpse(prod_2015_2016)
prod_2015_2016_final <- prod_2015_2016 %>%
select(Datetime,
'A_Optimal - Power DC [W]',
'B_Optimal - Power DC [W]')
summary(meteo_2015_2016)
meteo_2015_2016_final <- meteo_2015_2016 %>%
select(Datetime,
'Ambient Temperature [ºC]',
'Diffuse Radiation [W/m2]',
'Ultraviolet [W/m2]',
'Global Radiation [W/m2]')
tabla_final <- meteo_2015_2016_final %>%
left_join(prod_2015_2016_final, by = 'Datetime')
summary(tabla_final)
tabla_final <- tabla_final %>%
filter(`Ambient Temperature [ºC]` > -100)
summary(tabla_final)
write_csv(tabla_final, "meteo_prod_2015_2016.csv")
test_meteo_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-meteo-2017.csv")
test_prod_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-pv-2017.csv")
tabla_final_test <- test_meteo_2017 %>%
left_join(test_prod_2017, by = "Datetime") %>%
select(`A_Optimal - Power DC [W]`,
`Global Radiation [W/m2]`,
`Ultraviolet [W/m2]`)
write_csv(tabla_final_test, "test_meteo_prod_2017.csv")
library(tidyverse)
library(readxl)
library(VIM)
library(GGally)
meteo_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2015.csv")
meteo_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2016.csv")
prod_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2015.csv")
prod_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2016.csv")
meteo_2015_2016 <- bind_rows(meteo_2015, meteo_2016)
prod_2015_2016 <- bind_rows(prod_2015, prod_2016)
# Borramos los archivos originales
rm(meteo_2015)
rm(meteo_2016)
rm(prod_2015)
rm(prod_2016)
summary(prod_2015_2016)
glimpse(prod_2015_2016)
prod_2015_2016_final <- prod_2015_2016 %>%
select(Datetime,
'A_Optimal - Power DC [W]',
'B_Optimal - Power DC [W]')
summary(meteo_2015_2016)
meteo_2015_2016_final <- meteo_2015_2016 %>%
select(Datetime,
'Ambient Temperature [ºC]',
'Diffuse Radiation [W/m2]',
'Ultraviolet [W/m2]',
'Global Radiation [W/m2]')
tabla_final <- meteo_2015_2016_final %>%
left_join(prod_2015_2016_final, by = 'Datetime')
summary(tabla_final)
tabla_final <- tabla_final %>%
filter(`Ambient Temperature [ºC]` > -100)
tabla_final <- tabla_final %>%
filter(`Ambient Temperature [ºC]` > -100)
summary(tabla_final$`Ambient Temperature [ºC]`)
write_csv(tabla_final, "meteo_prod_2015_2016.csv")
data_nas <- prod_2015_2016 %>%
group_by(year = year(Datetime), month(Datetime)) %>%
summarise_all(funs(round(sum(!is.na(.))/n(), 2))) # We obtain the proportion of 'not NAs'
kable(data_nas)
library(tidyverse)
library(lubridate)
library(readxl)
library(GGally)
library(caret)
library(knitr)
library(gridExtra)
library(kableExtra)
meteo_2015 <- read_delim(file = "./data/original_data/train/sunlab-faro_meteo_2015.csv", delim = ";")
meteo_2016 <- read_delim(file = "./data/original_data/train/sunlab-faro-meteo-2016.csv", delim = ";")
prod_2015 <- read_delim(file = "./data/original_data/train/sunlab-faro-pv-2015.csv", delim = ";")
prod_2016 <- read_delim(file = "./data/original_data/train/sunlab-faro-pv-2016.csv", delim = ";")
meteo_2015_2016 <- bind_rows(meteo_2015, meteo_2016)
prod_2015_2016 <- bind_rows(prod_2015, prod_2016)
rm(meteo_2015)
rm(meteo_2016)
rm(prod_2015)
rm(prod_2016)
test_meteo_2017 <- read_xlsx(path = "./data/original_data/test/test-sunlab-meteo-2017.xlsx")
test_prod_2017 <- read_xlsx(path = "./data/original_data/test/test-sunlab-pv-2017.xlsx")
glimpse(prod_2015_2016)
head(prod_2015_2016, 10)
summary(prod_2015_2016)
glimpse(test_prod_2017)
prod_train_var <- names(prod_2015_2016)
prod_test_var <- names(test_prod_2017)
all.equal.character(prod_train_var, prod_test_var)
rm(prod_train_var)
rm(prod_test_var)
glimpse(meteo_2015_2016)
head(meteo_2015_2016)
summary(meteo_2015_2016)
glimpse(test_meteo_2017)
meteo_train_var <- names(meteo_2015_2016)
meteo_test_var <- names(test_meteo_2017)
all.equal.character(meteo_train_var, meteo_test_var)
rm(meteo_train_var)
rm(meteo_test_var)
registers_by_year <- prod_2015_2016 %>%
select(Datetime) %>%
group_by(year = year(prod_2015_2016$Datetime)) %>%
summarise(registers = n())
registers_by_year
rm(registers_by_year)
registers_by_year_month <- prod_2015_2016 %>%
select(Datetime) %>%
group_by(year = year(prod_2015_2016$Datetime),
month = month(prod_2015_2016$Datetime)) %>%
summarise(registers = n())
kable(registers_by_year_month)
kable(registers_by_year_month) %>% kable_styling()
library(tidyverse)
library(lubridate)
library(readxl)
library(GGally)
library(caret)
library(knitr)
library(gridExtra)
library(kableExtra)
meteo_2015 <- read_delim(file = "./data/original_data/train/sunlab-faro_meteo_2015.csv", delim = ";")
meteo_2016 <- read_delim(file = "./data/original_data/train/sunlab-faro-meteo-2016.csv", delim = ";")
prod_2015 <- read_delim(file = "./data/original_data/train/sunlab-faro-pv-2015.csv", delim = ";")
prod_2016 <- read_delim(file = "./data/original_data/train/sunlab-faro-pv-2016.csv", delim = ";")
meteo_2015_2016 <- bind_rows(meteo_2015, meteo_2016)
prod_2015_2016 <- bind_rows(prod_2015, prod_2016)
rm(meteo_2015)
rm(meteo_2016)
rm(prod_2015)
rm(prod_2016)
test_meteo_2017 <- read_xlsx(path = "./data/original_data/test/test-sunlab-meteo-2017.xlsx")
test_prod_2017 <- read_xlsx(path = "./data/original_data/test/test-sunlab-pv-2017.xlsx")
glimpse(prod_2015_2016)
head(prod_2015_2016, 10)
summary(prod_2015_2016)
glimpse(test_prod_2017)
prod_train_var <- names(prod_2015_2016)
prod_test_var <- names(test_prod_2017)
all.equal.character(prod_train_var, prod_test_var)
rm(prod_train_var)
rm(prod_test_var)
glimpse(meteo_2015_2016)
head(meteo_2015_2016)
summary(meteo_2015_2016)
glimpse(test_meteo_2017)
meteo_train_var <- names(meteo_2015_2016)
meteo_test_var <- names(test_meteo_2017)
all.equal.character(meteo_train_var, meteo_test_var)
rm(meteo_train_var)
rm(meteo_test_var)
registers_by_year <- prod_2015_2016 %>%
select(Datetime) %>%
group_by(year = year(prod_2015_2016$Datetime)) %>%
summarise(registers = n())
registers_by_year
rm(registers_by_year)
registers_by_year_month <- prod_2015_2016 %>%
select(Datetime) %>%
group_by(year = year(prod_2015_2016$Datetime),
month = month(prod_2015_2016$Datetime)) %>%
summarise(registers = n())
kable(registers_by_year_month) %>% kable_styling()
registers_by_year_month <- registers_by_year_month %>%
ungroup() %>%
add_row(year = c('2015', '2016', '2016'),
month = c('12', '4', '5'),
registers = '0') %>%
mutate(year = as.factor(year),
month = as.factor(month),
registers = as.numeric(registers))
registers_by_year_month_1 <- registers_by_year_month %>%
mutate(day = "01") %>%
unite(year_month, year, month, day, sep = '-') %>%
mutate(year_month = ymd(year_month))
ggplot(data = registers_by_year_month_1, aes(x = as.factor(year_month), y = registers, group = 1)) +
geom_line() +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size = 10)) +
labs(x = 'Year-Month')
rm(registers_by_year_month)
summary(registers_by_year_month_1)
ggplot(data = registers_by_year_month_1, aes(x = registers)) +
geom_histogram(bins = 23)
rm(registers_by_year_month_1)
register_frequency <- prod_2015_2016 %>%
select(Datetime) %>%
arrange(Datetime) %>% # Importante. Antes hay que ordenar los registros por Datetime.
mutate(Datetime_lagged = lag(Datetime)) %>%
mutate(time_diff = Datetime - Datetime_lagged) %>%
na.omit()
intervals_count <- register_frequency %>%
select(time_diff) %>%
group_by(time_diff) %>%
summarise(n = n()) %>%
arrange(desc(n))
kable(head(intervals_count, 20))
(two_year_minutes <- 2*365*24*60)
stops <- intervals_count %>%
mutate(time_diff = as.numeric(time_diff)) %>%
filter(time_diff > 1,
time_diff < 900) # En 2019 el día más largo del año en Faro será el 21 de junio con 14 horas y 42 minutos (asi que filtramos por debajo de 15 horas)
summary(stops$time_diff)
ggplot(data = stops, aes(x = time_diff)) +
geom_histogram(bins = 23)
night_stops <- intervals_count %>%
mutate(time_diff = as.numeric(time_diff)) %>%
filter(time_diff > 500) %>%
summarise(stops = sum(n))
night_stops
rm(stops, night_stops, intervals_count)
data_nas <- prod_2015_2016 %>%
group_by(year = year(Datetime), month(Datetime)) %>%
summarise_all(funs(round(sum(!is.na(.))/n(), 2))) # We obtain the proportion of 'not NAs'
kable(data_nas) %>%
kable_styling() %>%
scroll_box()
library(tidyverse)
library(lubridate)
library(readxl)
library(GGally)
library(caret)
library(knitr)
library(gridExtra)
library(kableExtra)
meteo_2015 <- read_delim(file = "./data/original_data/train/sunlab-faro_meteo_2015.csv", delim = ";")
meteo_2016 <- read_delim(file = "./data/original_data/train/sunlab-faro-meteo-2016.csv", delim = ";")
prod_2015 <- read_delim(file = "./data/original_data/train/sunlab-faro-pv-2015.csv", delim = ";")
prod_2016 <- read_delim(file = "./data/original_data/train/sunlab-faro-pv-2016.csv", delim = ";")
meteo_2015_2016 <- bind_rows(meteo_2015, meteo_2016)
prod_2015_2016 <- bind_rows(prod_2015, prod_2016)
rm(meteo_2015)
rm(meteo_2016)
rm(prod_2015)
rm(prod_2016)
test_meteo_2017 <- read_xlsx(path = "./data/original_data/test/test-sunlab-meteo-2017.xlsx")
test_prod_2017 <- read_xlsx(path = "./data/original_data/test/test-sunlab-pv-2017.xlsx")
glimpse(prod_2015_2016)
kable(head(prod_2015_2016, 10), booktab = TRUE)
library(tidyverse)
library(readxl)
library(VIM)
library(GGally)
meteo_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2015.csv")
meteo_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2016.csv")
prod_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2015.csv")
prod_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2016.csv")
meteo_2015_2016 <- bind_rows(meteo_2015, meteo_2016)
prod_2015_2016 <- bind_rows(prod_2015, prod_2016)
# Borramos los archivos originales
rm(meteo_2015)
rm(meteo_2016)
rm(prod_2015)
rm(prod_2016)
summary(prod_2015_2016)
glimpse(prod_2015_2016)
prod_2015_2016_final <- prod_2015_2016 %>%
select(Datetime,
'A_Optimal - Power DC [W]',
'B_Optimal - Power DC [W]')
summary(meteo_2015_2016)
meteo_2015_2016_final <- meteo_2015_2016 %>%
select(Datetime,
'Ambient Temperature [ºC]',
'Diffuse Radiation [W/m2]',
'Ultraviolet [W/m2]',
'Global Radiation [W/m2]')
tabla_final <- meteo_2015_2016_final %>%
left_join(prod_2015_2016_final, by = 'Datetime')
summary(tabla_final)
tabla_final <- tabla_final %>%
filter(`Ambient Temperature [ºC]` > -100)
summary(tabla_final$`Ambient Temperature [ºC]`)
write_csv(tabla_final, "meteo_prod_2015_2016.csv")
test_meteo_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-meteo-2017.csv")
test_prod_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-pv-2017.csv")
tabla_final_test <- test_meteo_2017 %>%
left_join(test_prod_2017, by = "Datetime") %>%
select(`A_Optimal - Power DC [W]`,
`Global Radiation [W/m2]`,
`Ultraviolet [W/m2]`)
write_csv(tabla_final_test, "test_meteo_prod_2017.csv")
glimpse(test_meteo_2017)
glimpse(test_prod_2017)
glimpse(tabla_final_test)
test_prod_2017 <- test_prod_2017 %>%
select(`A_Optimal - Power DC [W]`,
`Global Radiation [W/m2]`,
`Ultraviolet [W/m2]`)
test_meteo_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-meteo-2017.csv")
test_prod_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-pv-2017.csv")
test_prod_2017 <- test_prod_2017 %>%
select(`A_Optimal - Power DC [W]`,
`Global Radiation [W/m2]`,
`Ultraviolet [W/m2]`)
tabla_final_test <- test_prod_2017 %>%
left_join(test_meteo_2017, by = "Datetime") %>%
select(`A_Optimal - Power DC [W]`,
`Global Radiation [W/m2]`,
`Ultraviolet [W/m2]`)
glimpse(tabla_final_test)
glimpse(meteo_2015_2016_final)
glimpse(prod_2015_2016_final)
tabla_final <- prod_2015_2016_final %>%
left_join(meteo_2015_2016_final, by = 'Datetime')
summary(tabla_final)
test_prod_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-pv-2017.csv")
test_meteo_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-meteo-2017.csv")
tabla_final_test <- test_prod_2017 %>%
left_join(test_meteo_2017, by = "Datetime") %>%
select(`A_Optimal - Power DC [W]`,
`Global Radiation [W/m2]`,
`Ultraviolet [W/m2]`)
write_csv(tabla_final_test, "test_meteo_prod_2017.csv")
library(tidyverse)
library(readxl)
library(VIM)
library(GGally)
meteo_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2015.csv")
meteo_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2016.csv")
prod_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2015.csv")
prod_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2016.csv")
meteo_2015_2016 <- bind_rows(meteo_2015, meteo_2016)
prod_2015_2016 <- bind_rows(prod_2015, prod_2016)
# Borramos los archivos originales
rm(meteo_2015)
rm(meteo_2016)
rm(prod_2015)
rm(prod_2016)
summary(prod_2015_2016)
glimpse(prod_2015_2016)
prod_2015_2016_final <- prod_2015_2016 %>%
select(Datetime,
'A_Optimal - Power DC [W]',
'B_Optimal - Power DC [W]')
summary(meteo_2015_2016)
meteo_2015_2016_final <- meteo_2015_2016 %>%
select(Datetime,
'Ambient Temperature [ºC]',
'Diffuse Radiation [W/m2]',
'Ultraviolet [W/m2]',
'Global Radiation [W/m2]')
tabla_final <- prod_2015_2016_final %>%
left_join(meteo_2015_2016_final, by = 'Datetime')
summary(tabla_final)
tabla_final <- tabla_final %>%
filter(`Ambient Temperature [ºC]` > -100)
summary(tabla_final$`Ambient Temperature [ºC]`)
write_csv(tabla_final, "meteo_prod_2015_2016.csv")
test_prod_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-pv-2017.csv")
test_meteo_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-meteo-2017.csv")
tabla_final_test <- test_prod_2017 %>%
left_join(test_meteo_2017, by = "Datetime") %>%
select(`A_Optimal - Power DC [W]`,
`Global Radiation [W/m2]`,
`Ultraviolet [W/m2]`)
# Eliminamos los registros del panel tipo B y eliminamos también los registros con NAs
tabla_final_A <- tabla_final %>%
select(-`B_Optimal - Power DC [W]`) %>%
na.omit()
# Y creamos el modelo
modelo_A_1=lm(`A_Optimal - Power DC [W]` ~ `Global Radiation [W/m2]` + `Ultraviolet [W/m2]` , data =  tabla_final_A)
modelo_A_1
summary(modelo_A_1)
library(tidyverse)
library(readxl)
library(VIM)
library(GGally)
meteo_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2015.csv")
meteo_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro_meteo_2016.csv")
prod_2015 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2015.csv")
prod_2016 <- read_csv("./data/hackathon_data/train/sunlab-faro-pv-2016.csv")
meteo_2015_2016 <- bind_rows(meteo_2015, meteo_2016)
prod_2015_2016 <- bind_rows(prod_2015, prod_2016)
# Borramos los archivos originales
rm(meteo_2015)
rm(meteo_2016)
rm(prod_2015)
rm(prod_2016)
summary(prod_2015_2016)
glimpse(prod_2015_2016)
prod_2015_2016_final <- prod_2015_2016 %>%
select(Datetime,
'A_Optimal - Power DC [W]',
'B_Optimal - Power DC [W]')
summary(meteo_2015_2016)
meteo_2015_2016_final <- meteo_2015_2016 %>%
select(Datetime,
'Ambient Temperature [ºC]',
'Diffuse Radiation [W/m2]',
'Ultraviolet [W/m2]',
'Global Radiation [W/m2]')
tabla_final <- prod_2015_2016_final %>%
left_join(meteo_2015_2016_final, by = 'Datetime')
summary(tabla_final)
tabla_final <- tabla_final %>%
filter(`Ambient Temperature [ºC]` > -100)
summary(tabla_final$`Ambient Temperature [ºC]`)
write_csv(tabla_final, "meteo_prod_2015_2016.csv")
test_prod_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-pv-2017.csv")
test_meteo_2017 <- read_csv("./data/hackathon_data/test/test-sunlab-meteo-2017.csv")
tabla_final_test <- test_prod_2017 %>%
left_join(test_meteo_2017, by = "Datetime") %>%
select(`A_Optimal - Power DC [W]`,
`Global Radiation [W/m2]`,
`Ultraviolet [W/m2]`)
write_csv(tabla_final_test, "test_meteo_prod_2017.csv")
# Eliminamos los registros del panel tipo B y eliminamos también los registros con NAs
tabla_final_A <- tabla_final %>%
select(-`B_Optimal - Power DC [W]`) %>%
na.omit()
# Y creamos el modelo
modelo_A_1=lm(`A_Optimal - Power DC [W]` ~ `Global Radiation [W/m2]` + `Ultraviolet [W/m2]` , data =  tabla_final_A)
modelo_A_1
summary(modelo_A_1)
fitted_values <- modelo_A_1$fitted.values
real_values <- tabla_final_A$`A_Optimal - Power DC [W]`
glimpse(fitted_values)
glimpse(real_values)
prediccion_test <- predict(modelo_A_1, tabla_final_test_A)
tabla_final_test_A <- tabla_final_test %>%
select(`A_Optimal - Power DC [W]`,
`Global Radiation [W/m2]`,
`Ultraviolet [W/m2]`)
prediccion_test <- predict(modelo_A_1, tabla_final_test_A)
head(prediccion_test)
fitted_values_df <- as.data.frame(fitted_values)
head(fitted_values_df)
real_values_df <- as.data.frame(real_values)
head(real_values_df)
real_vs_fitted <- bind_cols(real_values_df, fitted_values_df)
head(real_vs_fitted)
glimpse(real_vs_fitted)
errors <- real_vs_fitted %>%
mutate(abs_error = abs(fitted_values - real_values))
View(errors)
real_values_df <- as.data.frame(real_values)
fitted_values_df <- as.data.frame(fitted_values)
real_vs_fitted <- bind_cols(real_values_df, fitted_values_df)
errors <- real_vs_fitted %>%
mutate(abs_error = abs(fitted_values - real_values))
MAE <- mean(errors$abs_error)
MAE
